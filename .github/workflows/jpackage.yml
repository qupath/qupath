# This workflow will build a Java project with Gradle, then create an image with jpackage
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build packages with jpackage

on:
  workflow_dispatch:
    inputs:
      extensions:
        description: Comma-separated list of extensions to build with.
        required: false
        type: string
  workflow_call:
    inputs:
      extensions:
        description: Comma-separated list of extensions to build with.
        required: false
        type: string



jobs:
  build:
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-latest
            name: Linux
          - platform: macos-13 # x64
            name: Mac-x64
          - platform: macos-14 # aarch64
            name: Mac-arm64
          - platform: windows-latest
            name: Windows
    runs-on: ${{ matrix.platform }}
    steps:

    - uses: actions/checkout@v4
      with:
        path: qupath

    - name: Clone extensions
      if: ${{ github.event.inputs.extensions != '' }}
      run: |
        IFS=',' read -ra EXTENSIONS <<< "${{ inputs.extensions }}"
        echo "[includeBuild]" > qupath/include-extra
        for EXTENSION in "${EXTENSIONS[@]}"; do
          git clone "https://github.com/qupath/$EXTENSION"
          echo "../$EXTENSION" >> qupath/include-extra
        done
        echo "[dependencies]" >> qupath/include-extra
        for EXTENSION in "${EXTENSIONS[@]}"; do
          echo "io.github.qupath:$EXTENSION" >> qupath/include-extra
        done
        cat qupath/include-extra
        ls -lah

    - name: Set QuPath version
      run: |
        echo "QUPATH_VERSION=$(cat qupath/VERSION)" >> $GITHUB_ENV

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Assemble javadocs
      run: |
        pushd qupath
        ./gradlew assembleJavadocs
        popd

    - name: Build with Gradle
      run: |
        pushd qupath
        ./gradlew jpackage -P git-commit=true -P package=installer mergedJavadoc createChecksums -P toolchain=21
        popd

    - name: Make Linux tar.xz
      if: matrix.name == 'Linux'
      run: |
        tar -c -C qupath/build/dist/ QuPath | xz > qupath/build/dist/QuPath-v${{ env.QUPATH_VERSION }}-${{ matrix.name }}.tar.xz
        rm -r qupath/build/dist/QuPath/

    - name: Clean windows artifact
      if: matrix.name == 'Windows'
      run: |
        rm -r qupath/build/dist/QuPath-${{ env.QUPATH_VERSION }}

    - uses: actions/upload-artifact@v4
      with:
        name: QuPath-v${{ env.QUPATH_VERSION }}-${{ matrix.name }}
        path: qupath/build/dist/QuPath*
        retention-days: 1

    - uses: actions/upload-artifact@v4
      if: matrix.name == 'Mac-arm64'
      with:
        name: javadoc-QuPath-v${{ env.QUPATH_VERSION }}
        path: qupath/build/docs-merged/javadoc
        retention-days: 7
